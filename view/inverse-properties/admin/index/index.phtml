<?php
$this->htmlElement('body')->appendAttribute('class', 'inverse-properties');
$propertyPairTemplate = $this->partial('common/inverse-properties-property-pair-template');
?>

<?php echo $this->pageTitle($this->translate('Manage'), 1, $this->translate('Inverse properties'), $this->translate('Inverse property pairs')); ?>

<form method="post">

<div id="page-actions">
    <input type="submit" value="<?php echo $this->escapeHtml($this->translate('Submit')); ?>">
</div>

<div id="property-pairs"
    data-property-pairs="<?php echo $this->escapeHtml(json_encode($propertyPairs)); ?>"
    data-property-pair-template="<?php echo $this->escapeHtml($propertyPairTemplate); ?>"></div>

<button type="button" id="add-property-pair" class="o-icon-add" aria-label="<?php echo $this->translate('Add new inverse property pair'); ?>" title="<?php echo $this->translate('Add new inverse property pair'); ?>"></button>

</form>

<script>
const propertyPairsDiv = $('#property-pairs');
const propertyPairs = propertyPairsDiv.data('propertyPairs');
const propertyPairTemplate = $($.parseHTML(propertyPairsDiv.data('propertyPairTemplate')));

// Add a property pair.
const addPropertyPair = function(propertyPair) {
    const propertyPairDiv = propertyPairTemplate.clone();
    const p1Select = propertyPairDiv.find('.p1');
    const p2Select = propertyPairDiv.find('.p2');
    const index = Math.random().toString(36).substr(2, 5);
    p1Select.attr('name', `property_pairs[${index}][p1]`)
        .val(propertyPair['p1'])
        .chosen(chosenOptions);
    p2Select.attr('name', `property_pairs[${index}][p2]`)
        .val(propertyPair['p2'])
        .chosen(chosenOptions);
    propertyPairDiv.find('.restore-property-pair').hide();
    propertyPairsDiv.append(propertyPairDiv);
};

// Initialize page.
if (propertyPairs.length) {
    $.each(propertyPairs, function(index, propertyPair) {
        addPropertyPair(propertyPair);
    });
} else {
    addPropertyPair([null, null]);
}
$('.restore-property-pair').hide();

// Handle add property pair button.
$('#add-property-pair').on('click', function(e) {
    addPropertyPair([null, null]);
});

// Handle property pair remove button.
$(document).on('click', '.remove-property-pair', function(e) {
    const thisButton = $(this);
    const propertyPairDiv = thisButton.closest('.property-pair');
    propertyPairDiv.find('select').prop('disabled', true).trigger('chosen:updated');
    propertyPairDiv.find('.restore-property-pair').show();
    thisButton.hide();
});

// Handle restore property pair button.
$(document).on('click', '.restore-property-pair', function(e) {
    const thisButton = $(this);
    const propertyPairDiv = thisButton.closest('.property-pair');
    propertyPairDiv.find('select').prop('disabled', false).trigger('chosen:updated');
    propertyPairDiv.find('.remove-property-pair').show();
    thisButton.hide();
});
</script>
